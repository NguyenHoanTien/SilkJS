OBJ=	main.o base64.o global.o console.o process.o net.o fs.o buffer.o mysql.o http.o gd.o ncurses.o sem.o logfile.o v8.o md5.o sqlite3.o xhrhelper.o curl.o ssh2.o sftp.o memcached.o ftplib.o ftp.o editline.o popen.o linenoise.o cairo.o expat.o

CFLAGS = -O6 -fomit-frame-pointer -fdata-sections -ffunction-sections -fno-strict-aliasing -fno-rtti -fno-exceptions -fvisibility=hidden -Wall -W -Wno-unused-parameter -Wnon-virtual-dtor -m64 -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -ansi -fno-strict-aliasing

V8 = ./v8-read-only

V8_LIB = $(V8)/out/x64.release/libv8_base.a $(V8)/out/x64.release/libv8_snapshot.a

MYSQL = $(CURDIR)/mysql-5.1.58

JPEG = $(CURDIR)/jpeg-8b

GD2 = $(CURDIR)/libgd2_2.0.36~rc1~dfsg.orig

MM = $(CURDIR)/mm-1.4.2

CURL = $(CURDIR)/curl-7.21.6

SSH2 = $(CURDIR)/libssh2-1.2.8

MEMCACHED = $(CURDIR)/libmemcached-0.44

LIBDIR = $(CURDIR)/osx_dependencies

DEPENDENCIES = $(MYSQL) $(JPEG) $(GD2) $(MM) $(CURL) $(SSH2) $(MEMCACHED)

STATICLIBS = $(LIBDIR)/lib/mysql/libmysqlclient.a \
	$(V8_LIB) \
	$(LIBDIR)/lib/libcurl.a \
	$(LIBDIR)/lib/libmm.a \
	$(LIBDIR)/lib/libgd.a \
	$(LIBDIR)/lib/libjpeg.a \
	$(LIBDIR)/lib/libmemcached.a \
	$(LIBDIR)/lib/libssh2.a


%.o: %.cpp SilkJS.h Makefile
	g++ $(CFLAGS) -c -I/usr/X11/include -I$(CURDIR)/osx_dependencies/include -I$(MYSQL)/include -I$(SSH2)/include -Iv8-read-only/include -o $*.o $*.cpp

# SilkJS:	$(V8) $(V8_LIB) $(DEPENDENCIES) $(OBJ) SilkJS.h Makefile
# 	g++ $(CFLAGS) -o silkjs $(OBJ) -Lv8-read-only -lv8 -L$(LIBDIR)/lib/mysql -lmysqlclient -L$(LIBDIR)/lib -lmm -ljpeg -lgd -lncurses -lssl -lpthread -lsqlite3 -lcurl -lssh2 -lmemcached -ledit -L/usr/X11/lib -lcairo -lexpat

SilkJS:	$(V8) $(V8_LIB) $(DEPENDENCIES) $(OBJ) SilkJS.h Makefile
	g++ $(CFLAGS) -o silkjs $(OBJ) $(STATICLIBS) -lncurses -lpthread -lsqlite3  -L/usr/X11/lib -lcairo -lexpat -lz -lssl -lcrypto -lpng -lfreetype -lxpm -liconv -lfontconfig -lsasl2

perms:
	@sudo mkdir -p /usr/local/bin
	@sudo chgrp admin /usr/local /usr/local/bin 
	@sudo chmod g+rwx /usr/local /usr/local/bin

install:	SilkJS perms
	@rm -rf /usr/local/silkjs/builtin /usr/local/silkjs/bin /usr/local/silkjs/httpd /usr/local/silkjs/lib /usr/local/silkjs/modules /usr/local/silkjs/walkthrough /usr/local/silkjs/src
	@mkdir -p /usr/local/bin /usr/local/silkjs /usr/local/silkjs/src /usr/local/silkjs/projects
	cp -rp ../builtin ../examples ../httpd ../lib ../modules ../walkthrough /usr/local/silkjs
	cp ../src/*.cpp ../src/*.h /usr/local/silkjs/src
	mv /usr/local/silkjs/examples /usr/local/silkjs/bin
	chmod 755 /usr/local/silkjs/bin/* /usr/local/silkjs/httpd/main.js
	cp silkjs /usr/local/silkjs/bin
	chgrp admin /usr/local /usr/local/bin 
	chmod g+rwx /usr/local /usr/local/bin
	ln -sf /usr/local/silkjs/bin/silkjs /usr/local/bin
	ln -sf /usr/local/silkjs/httpd/main.js /usr/local/bin/httpd-silk.js

uninstall:
	@rm -rf /usr/local/silkjs /usr/local/bin/httpd-silk.js /usr/local/bin/silkjs

clean:
	rm -rf silkjs *.o 

realclean:
	rm -rf silkjs *.o $(DEPENDENCIES) $(V8) $(LIBDIR)

release: silkjs
	tar czvfp ~/silkjs.tgz silkjs examples httpd lib

$(OBJ): SilkJS.h Makefile

$(V8):
	echo "svn checkout"
	svn checkout http://v8.googlecode.com/svn/trunk/ v8-read-only

$(V8_LIB):
	cd $(V8) && svn update && make dependencies && GYP_GENERATORS=make make GYPFLAGS="-Dcomponent=shared_library" -j 4 x64.release 
#	cd $(V8) && scons -j 4 arch=x64

$(MYSQL):
	tar xzvfp dependencies/mysql-5.1.58.tar.gz
	cd $(MYSQL) && ./configure --prefix $(LIBDIR) && make && make install

$(MEMCACHED):
	tar xzvfp dependencies/libmemcached_0.44.orig.tar.gz
	cd $(MEMCACHED) && ./configure --prefix $(LIBDIR) CFLAGS=-fPIC --disable-shared && make && make install

$(JPEG):
	tar xzvfp dependencies/libjpeg8_8b.orig.tar.gz
	cd $(JPEG) && ./configure --prefix $(LIBDIR) && make && make install

$(GD2):
	tar xzvfp dependencies/libgd2_2.0.36~rc1~dfsg.orig.tar.gz
	cd $(GD2) && ./configure --prefix $(LIBDIR) --with-jpeg=$(LIBDIR) && make && make install

$(MM):
	tar xzvfp dependencies/mm_1.4.2.orig.tar.gz
	cd $(MM) && ./configure --prefix $(LIBDIR) && make && make install

$(CURL):
	tar xzvfp dependencies/curl_7.21.6.orig.tar.gz
	cd $(CURL) && ./configure --prefix $(LIBDIR) --disable-ldap && make && make install

$(SSH2):
	tar xzvfp dependencies/libssh2_1.2.8.orig.tar.gz
	cd $(SSH2) && ./configure --prefix $(LIBDIR) && make && make install

